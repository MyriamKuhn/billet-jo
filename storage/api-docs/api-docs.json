{
    "openapi": "3.0.0",
    "info": {
        "title": "Paris 2024 Olympic Games Ticketing API",
        "description": "This API manages the entire ticket lifecycle for the Paris 2024 Olympic Games: user registration, shopping cart management, payment processing, ticket generation, and entry validation.\n\nThis project was developed as part of the **Bachelor's degree in Digital Solutions Development**. The architecture is based on a **modular Laravel monolith**, structured into internal services (users, tickets, cart, payment, etc.) organized as internal packages to ensure better organization, maintainability, and scalability.\n\nThe notification system, including emails and system messages, is managed internally through a dedicated Laravel service and is not exposed as a public API.",
        "contact": {
            "name": "Myriam KÃ¼hn",
            "url": "https://myriamkuhn.com/",
            "email": "myriam.kuehn@free.fr"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development environment"
        },
        {
            "url": "https://api-jo2024.mkcodecreations.dev",
            "description": "Production server"
        }
    ],
    "paths": {
        "/api/cart/ping": {
            "get": {
                "tags": [
                    "Cart"
                ],
                "summary": "Test route",
                "operationId": "e7cfa648d85fd26bbc030629bb30bcf1",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/payment/ping": {
            "get": {
                "tags": [
                    "Payments"
                ],
                "summary": "Test route",
                "operationId": "c3ae22d08215bab0c4d22e2edc5b121c",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/product/ping": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Test route",
                "operationId": "603751feb31b986383e6d4af7b7a7b44",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/ticket/ping": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Test route",
                "operationId": "d558dab4d2de358752c3798cf771c6c7",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/user/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "description": "Allows a user to create an account. Requires a secure password (at least 15 characters, with uppercase letters, lowercase letters, numbers, and symbols), validation via Google reCAPTCHA to prevent abuse, and email confirmation after registration. Account creation attempts are protected by throttling to prevent spam. A verification email is sent to validate the user's email address. The API also protects against unauthorized access with a restrictive CORS configuration.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "captcha_token"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "John"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "MegaGreatPassword@2025"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "MegaGreatPassword@2025"
                                    },
                                    "captcha_token": {
                                        "type": "string",
                                        "example": "03AGdBq27..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfull. Verification Email sended.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please check your emails."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or captcha verification failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Captcha verification failed."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "property": null
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many attempts. Please try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Time to wait before retrying (in seconds)",
                                "schema": {
                                    "type": "integer",
                                    "example": 60
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Too many attempts. Please try again in 60 seconds."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal or database error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An internal error occurred. Please try again later."
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "Database error. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied."
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "You do not have the necessary permissions."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You must be logged in to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "405": {
                        "description": "Not allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Method not allowed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Verify the user's email address",
                "description": "This route verifies a user's email address via a link sent to them. Based on the result, it returns a redirection URL. This operation is intended to be used exclusively through links sent by email.",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID to verify",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Hash of the user's email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abc123hashsecure"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your email address has been successfully verified."
                                        },
                                        "redirect_url": {
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid verification link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The verification link is invalid."
                                        },
                                        "redirect_url": {
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "redirect_url": {
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your email address has already been verified."
                                        },
                                        "redirect_url": {
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/already-verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/email/verification-notification": {
            "post": {
                "tags": [
                    "Email Verification"
                ],
                "summary": "Resend email verification link",
                "description": "This endpoint allows a logged-in user to request a resend of the email verification link if their email address has not been verified yet.",
                "operationId": "resendVerificationEmail",
                "responses": {
                    "200": {
                        "description": "Email verification link resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A new verification email has been sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Your email address has already been verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You must be logged in to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Users",
            "description": "Account management, authentication, roles, and profiles"
        },
        {
            "name": "Email Verification",
            "description": "Email verification and confirmation process"
        },
        {
            "name": "Tickets",
            "description": "Ticket creation, generation, validation, and tracking"
        },
        {
            "name": "Payments",
            "description": "Payment processing and secure transactions"
        },
        {
            "name": "Cart",
            "description": "Management of items added to the shopping cart"
        },
        {
            "name": "Products",
            "description": "Management of products available for purchase"
        }
    ]
}