{
    "openapi": "3.0.0",
    "info": {
        "title": "Paris 2024 Olympic Games Ticketing API",
        "description": "This API manages the entire ticket lifecycle for the Paris 2024 Olympic Games: user registration, shopping cart management, payment processing, ticket generation, and entry validation.\n\nThis project was developed as part of the **Bachelor's degree in Digital Solutions Development**. The architecture is based on a **modular Laravel monolith**, structured into internal services (users, tickets, cart, payment, etc.) organized as internal packages to ensure better organization, maintainability, and scalability.\n\nThe notification system, including emails and system messages, is managed internally through a dedicated Laravel service and is not exposed as a public API.\n\n**Note:** All API endpoints are protected by CORS (Cross-Origin Resource Sharing) to restrict access to authorized domains only, ensuring secure communication between the client and the server.",
        "contact": {
            "name": "Myriam Kühn",
            "url": "https://myriamkuhn.com/",
            "email": "myriam.kuehn@free.fr"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development environment"
        },
        {
            "url": "https://api-jo2024.mkcodecreations.dev",
            "description": "Production server"
        }
    ],
    "paths": {
        "/api/products": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get filtered list of products",
                "description": "Returns a paginated and filtered list of available products according to query parameters. Cache is used to optimize performance.",
                "operationId": "index",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter products by name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter products by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Filter products by location",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter products by event date (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "places",
                        "in": "query",
                        "description": "Filter products by minimum number of available places",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort products by a specific field (name, price, product_details->date)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "price",
                                "product_details->date"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of products per page (default 10)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number for pagination (default 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Cérémonie d’ouverture officielle des JO"
                                                    },
                                                    "price": {
                                                        "type": "string",
                                                        "example": "100.00"
                                                    },
                                                    "sale": {
                                                        "type": "string",
                                                        "example": "0.00"
                                                    },
                                                    "stock_quantity": {
                                                        "type": "integer",
                                                        "example": 50
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-30T19:54:25.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-30T19:54:25.000000Z"
                                                    },
                                                    "product_details": {
                                                        "properties": {
                                                            "places": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "example": [
                                                                    "Assistez à un moment historique avec la cérémonie d’ouverture des Jeux Olympiques de Paris 2024.",
                                                                    "Vivez une soirée exceptionnelle où le sport, la culture et l’émotion se rencontrent dans un spectacle grandiose au cœur de la Ville Lumière."
                                                                ]
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2024-07-26"
                                                            },
                                                            "time": {
                                                                "type": "string",
                                                                "example": "19h30 (accès recommandé dès 18h00)"
                                                            },
                                                            "location": {
                                                                "type": "string",
                                                                "example": "Stade de France, Saint-Denis"
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "Cérémonies"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "https://picsum.photos/seed/1/600/400"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid or unexpected parameters)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Unexpected parameter(s) detected: foo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "No products found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while fetching the products. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/products/all": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Get filtered list of all products (for admin only)",
                "description": "Returns a paginated and filtered list of all products. Cache is used to optimize performance. Only for admin.",
                "operationId": "getProducts",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter products by name",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Filter products by category",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Filter products by location",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Filter products by event date (format: Y-m-d)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "places",
                        "in": "query",
                        "description": "Filter products by minimum number of available places",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Sort products by a specific field (name, price, product_details->date)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "name",
                                "price",
                                "product_details->date"
                            ]
                        }
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "Sort order (asc or desc)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of products per page (default 10)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "The page number for pagination (default 1)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Cérémonie d’ouverture officielle des JO"
                                                    },
                                                    "price": {
                                                        "type": "string",
                                                        "example": "100.00"
                                                    },
                                                    "sale": {
                                                        "type": "string",
                                                        "example": "0.00"
                                                    },
                                                    "stock_quantity": {
                                                        "type": "integer",
                                                        "example": 50
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-30T19:54:25.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-04-30T19:54:25.000000Z"
                                                    },
                                                    "product_details": {
                                                        "properties": {
                                                            "places": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "description": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                },
                                                                "example": [
                                                                    "Assistez à un moment historique avec la cérémonie d’ouverture des Jeux Olympiques de Paris 2024.",
                                                                    "Vivez une soirée exceptionnelle où le sport, la culture et l’émotion se rencontrent dans un spectacle grandiose au cœur de la Ville Lumière."
                                                                ]
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2024-07-26"
                                                            },
                                                            "time": {
                                                                "type": "string",
                                                                "example": "19h30 (accès recommandé dès 18h00)"
                                                            },
                                                            "location": {
                                                                "type": "string",
                                                                "example": "Stade de France, Saint-Denis"
                                                            },
                                                            "category": {
                                                                "type": "string",
                                                                "example": "Cérémonies"
                                                            },
                                                            "image": {
                                                                "type": "string",
                                                                "example": "https://picsum.photos/seed/1/600/400"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request (invalid or unexpected parameters)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Unexpected parameter(s) detected: foo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No products found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "No products found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An error occurred while fetching the products. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/products/{product}": {
            "get": {
                "tags": [
                    "Products"
                ],
                "summary": "Show a specific product by ID",
                "description": "Returns the details of a specific product by its ID.",
                "operationId": "getProductById",
                "parameters": [
                    {
                        "name": "product",
                        "in": "path",
                        "description": "ID du produit",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Billet concert"
                                                },
                                                "product_details": {
                                                    "properties": {
                                                        "places": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "Assistez à un moment historique avec la cérémonie d’ouverture des Jeux Olympiques de Paris 2024. Vivez une soirée exceptionnelle..."
                                                        },
                                                        "date": {
                                                            "type": "string",
                                                            "example": "2024-07-26"
                                                        },
                                                        "time": {
                                                            "type": "string",
                                                            "example": "19h30 (accès recommandé dès 18h00)"
                                                        },
                                                        "location": {
                                                            "type": "string",
                                                            "example": "Stade de France, Saint-Denis"
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "example": "Cérémonies"
                                                        },
                                                        "image": {
                                                            "type": "string",
                                                            "example": "https://picsum.photos/seed/1/600/400"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 59.99
                                                },
                                                "sale": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 49.99
                                                },
                                                "stock_quantity": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-01-01T00:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2023-04-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Produit non trouvé",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No query results for model [App\\Models\\Product] 123"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/all": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve the list of all users",
                "description": "This endpoint returns a list of all users, accessible only to admins.",
                "operationId": "4a5ea8acc8be65dbe322c97650d62bcc",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the users list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "users": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "firstname": {
                                                                "type": "string",
                                                                "example": "John"
                                                            },
                                                            "lastname": {
                                                                "type": "string",
                                                                "example": "Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john.doe@example.com"
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-01T12:00:00Z"
                                                            },
                                                            "updated_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-02T14:30:00Z"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "enum": [
                                                                    "admin",
                                                                    "employee",
                                                                    "user"
                                                                ],
                                                                "example": "admin"
                                                            },
                                                            "twofa_enabled": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "email_verified_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-05-01T12:00:00Z"
                                                            },
                                                            "is_active": {
                                                                "type": "boolean",
                                                                "example": true
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden: User is not an admin or unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/{user}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve a specific user by ID",
                "description": "Fetch details of a user by ID. Only admins and employees can access this.",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "firstname": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "lastname": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@example.com"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized, only admins and employees are allowed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/update": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Change user's first and last name",
                "description": "Allows the authenticated user to update their firstname and lastname.",
                "operationId": "updateUserName",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Myriam"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Kühn"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User name updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "firstname": {
                                                            "type": "string",
                                                            "example": "Myriam"
                                                        },
                                                        "lastname": {
                                                            "type": "string",
                                                            "example": "Kühn"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "properties": {
                                                "firstname": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The firstname field is required."
                                                    }
                                                },
                                                "lastname": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The lastname field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user/{user}": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Change user informations by admin",
                "description": "Allows an admin to update a user's information.",
                "operationId": "updateUserByAdmin",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "twofa_enabled": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "firstname": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Myriam"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Kühn"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "myriam@example.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "employee",
                                            "user"
                                        ],
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "firstname": {
                                                            "type": "string",
                                                            "example": "Myriam"
                                                        },
                                                        "lastname": {
                                                            "type": "string",
                                                            "example": "Kühn"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "myriam@example.com"
                                                        },
                                                        "is_active": {
                                                            "type": "boolean",
                                                            "example": true
                                                        },
                                                        "twofa_enabled": {
                                                            "type": "boolean",
                                                            "example": false
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "enum": [
                                                                "admin",
                                                                "employee",
                                                                "user"
                                                            ],
                                                            "example": "admin"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The user has been updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/{user}/email-update": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Check if an email update exists for a user",
                "description": "Accessible only by admins. Returns the latest email update request for the given user if it exists.",
                "operationId": "ee7945005289a5fa36349d05a5673332",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "ID of the user to check for email update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email update found or not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "old_email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "old@example.com"
                                                        },
                                                        "new_email": {
                                                            "type": "string",
                                                            "format": "email",
                                                            "example": "new@example.com"
                                                        },
                                                        "created_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-01T10:00:00Z"
                                                        },
                                                        "updated_at": {
                                                            "type": "string",
                                                            "format": "date-time",
                                                            "example": "2025-05-01T10:30:00Z"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "Email update found."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "status": {
                                                    "type": "string",
                                                    "example": "success"
                                                },
                                                "data": {
                                                    "type": "string",
                                                    "example": null,
                                                    "nullable": true
                                                },
                                                "message": {
                                                    "type": "string",
                                                    "example": "No email update found."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access (non-admin user)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/create": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create an employee user",
                "description": "This endpoint allows an admin to create a new employee user.",
                "operationId": "createEmployee",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "example": "Anna"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "example": "Müller"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "anna.mueller@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Str0ng!Password2024"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Str0ng!Password2024"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee user created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Employee created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 42
                                                        },
                                                        "firstname": {
                                                            "type": "string",
                                                            "example": "Anna"
                                                        },
                                                        "lastname": {
                                                            "type": "string",
                                                            "example": "Müller"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "anna.mueller@example.com"
                                                        },
                                                        "role": {
                                                            "type": "string",
                                                            "example": "employee"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized - only admins can create employees",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authorized to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/info": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get authenticated user's profile",
                "description": "Returns the profile information of the currently authenticated user, including 2FA status.",
                "operationId": "showUserInfo",
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "properties": {
                                                "firstname": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "lastname": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email",
                                                    "example": "john.doe@example.com"
                                                },
                                                "twofa_enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized (no valid token)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Allows a user to create an account. Requires a secure password (at least 15 characters, with uppercase letters, lowercase letters, numbers, and symbols), validation via Google reCAPTCHA to prevent abuse, and email confirmation after registration. Account creation attempts are protected by throttling to prevent spam. A verification email is sent to validate the user's email address. The API also protects against unauthorized access with a restrictive CORS configuration.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstname",
                                    "lastname",
                                    "email",
                                    "password",
                                    "password_confirmation",
                                    "captcha_token"
                                ],
                                "properties": {
                                    "firstname": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "John"
                                    },
                                    "lastname": {
                                        "type": "string",
                                        "maxLength": 100,
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "MegaGreatPassword@2025"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "MegaGreatPassword@2025"
                                    },
                                    "captcha_token": {
                                        "type": "string",
                                        "example": "03AGdBq27..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfull. Verification Email sended.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful. Please check your emails."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or captcha verification failed.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Captcha verification failed."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                },
                                                "property": null
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal or database error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Allows a user to log in with their email and password, and receive an authentication token. Admins can disable accounts, and users can choose to remember their login or activate two-factor authentication (2FA).",
                "operationId": "login",
                "requestBody": {
                    "description": "Login credentials (email and password are mandatory)",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "remember"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "MyGreatPassword@123"
                                    },
                                    "remember": {
                                        "description": "Optional: Whether the user wants to stay logged in",
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "twofa_code": {
                                        "description": "Optional: Two-factor authentication code",
                                        "type": "string",
                                        "example": "123456"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Connection successful. Returns the authentication token and user information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "token_example"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "firstname": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "lastname": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "twofa_enabled": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error (email not verified or 2FA code not valid)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error. Please check your data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials. Please check your email address and password."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Account disabled or access denied.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Your account has been disabled. Please contact support."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many attempts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Too many attempts. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error or database error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An internal error occurred. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/enable2FA": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Enable two-factor authentication for the user",
                "description": "Generates a new secret key for two-factor authentication and returns the QR code URL.",
                "operationId": "enableTwoFactor",
                "responses": {
                    "200": {
                        "description": "Two-factor authentication enabled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "secret": {
                                            "description": "Generated secret key for 2FA",
                                            "type": "string",
                                            "example": "JBSWY3DPEHPK3PXP"
                                        },
                                        "qrCodeUrl": {
                                            "description": "URL to generate QR code for 2FA",
                                            "type": "string",
                                            "example": "otpauth://totp/Example%3Auser%40example.com?secret=JBSWY3DPEHPK3PXP&issuer=Example"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Authentication error: User must be logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You must be logged in to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user and invalidate their current access token",
                "description": "Logs out the user by deleting their current active token.",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Successfully logged out.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "No active token found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You are not authenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unknown error or Database error occurred while logging out.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Unknown error occurred."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/forgot-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Send password reset link",
                "description": "This endpoint sends a password reset link to the user's email address.",
                "operationId": "forgotPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset link sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "A password reset link has been sent to your email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error. Please check your data."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "Too many attempts. Please try again later.",
                        "headers": {
                            "Retry-After": {
                                "description": "Time to wait before retrying (in seconds)",
                                "schema": {
                                    "type": "integer",
                                    "example": 60
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Too many attempts. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/reset-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Reset user password",
                "description": "Allows a user to reset their password using a valid token sent by email.",
                "operationId": "resetPassword",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "abcdef123456"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "StrongP@ssword2025!"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "StrongP@ssword2025!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password successfully reset",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your password has been reset successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The password reset token is invalid or has expired."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "No user could be found with this email address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error. Please check your data."
                                        },
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password must be at least 15 characters."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/update-password": {
            "patch": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change the user's password",
                "description": "This endpoint allows the user to change their password. It requires the current password and the new one.",
                "operationId": "188d762d2069ae4a7561445c943879a3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "current_password",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "current_password": {
                                        "description": "The current password of the user",
                                        "type": "string",
                                        "example": "StrongP@ssword2025!"
                                    },
                                    "password": {
                                        "description": "The new password to be set for the user",
                                        "type": "string",
                                        "example": "NewP@ssword2025!"
                                    },
                                    "password_confirmation": {
                                        "description": "Confirmation of the new password",
                                        "type": "string",
                                        "example": "NewP@ssword2025!"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your password has been successfully changed."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid current password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "The current password is incorrect."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error, invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error. Please check your data."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/update-email": {
            "patch": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change the user's email",
                "description": "This endpoint allows an authenticated user to update their email address.",
                "operationId": "d8b905497c78c91c64c977aabfd31630",
                "requestBody": {
                    "description": "The email address to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "new.email@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "An email has been sent for verification.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A verification email has been sent to your new address. Please check your inbox."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error when the provided email is the current email.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "This email address is already your current address."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized user.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You must be logged in to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The provided email is already in use.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "This email is already associated with an existing account."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Unknown error.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An internal error occurred. Please try again later."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/email/verify/{id}/{hash}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify the user's email address",
                "description": "This route verifies a user's email address via a link sent to them. Based on the result, it returns a redirection URL. This operation is intended to be used exclusively through links sent by email.",
                "operationId": "verifyEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User ID to verify",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "Hash of the user's email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abc123hashsecure"
                        }
                    },
                    {
                        "name": "expires",
                        "in": "query",
                        "description": "Expiration timestamp of the link",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1714687561
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "Signed URL signature",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "a94a8fe5ccb19ba61c4c0873d391e987982fbbd3"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your email address has been successfully verified."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid verification link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "The verification link is invalid."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "User not found."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Your email address has already been verified."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/already-verified"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred. Please try again later"
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/email/resend-verification": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend email verification link",
                "description": "This endpoint allows a logged-in user to request a resend of the email verification link if their email address has not been verified yet.",
                "operationId": "resendVerificationEmail",
                "responses": {
                    "200": {
                        "description": "Email verification link resent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "A new verification email has been sent."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Email already verified",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Your email address has already been verified."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "You must be logged in to perform this action."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred. Please try again later"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/email/verify-new-mail": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify a user's new email address",
                "description": "Verifies a new email using a token sent to the user's new email address. The token must be passed as a query parameter.",
                "operationId": "verifyNewEmail",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "The token used to verify the email update",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "abc123hashsecure"
                        }
                    },
                    {
                        "name": "signature",
                        "in": "query",
                        "description": "The signature to validate the token",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "xyz456signature"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Email updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your email has been updated successfully."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Missing or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid or missing verification token."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Token used or user not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "This verification token is no longer valid."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/email/cancel-update/{token}/{old_email}": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Cancel a pending email update request",
                "description": "Cancels a pending email update request using a signed URL. The link is valid for 48 hours.",
                "operationId": "cancelEmailUpdate",
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "Verification token (plain, not hashed)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "d7f9b27dcbf04431c9c45a271c..."
                        }
                    },
                    {
                        "name": "old_email",
                        "in": "path",
                        "description": "The user's current (old) email address",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "email",
                            "example": "old@example.com"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The email update request was successfully canceled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your email update request has been cancelled."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/success"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No matching email update request found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Email update request not found."
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/invalid"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "An unknown error occurred. Please try again later"
                                        },
                                        "redirect_url": {
                                            "description": "Used for redirection only in production. In development, a JSON response will be returned.",
                                            "type": "string",
                                            "example": "https://jo2024.mkcodecreation.dev/verification-result/error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Cart": {
                "required": [
                    "id",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "cart_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItem"
                        }
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "CartItem": {
                "required": [
                    "id",
                    "quantity",
                    "cart_id",
                    "product_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "quantity": {
                        "type": "integer",
                        "example": 2
                    },
                    "cart_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 5
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T12:00:00Z"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object"
            },
            "EmailUpdate": {
                "required": [
                    "id",
                    "user_id",
                    "old_email",
                    "new_email",
                    "token"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "old_email": {
                        "type": "string",
                        "example": "old.email@example.com"
                    },
                    "new_email": {
                        "type": "string",
                        "example": "new.email@example.com"
                    },
                    "token": {
                        "type": "string",
                        "example": "1234567890abcdef"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Payment": {
                "required": [
                    "id",
                    "invoice_link",
                    "amount",
                    "payment_method",
                    "status",
                    "user_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "uuid": {
                        "type": "string",
                        "example": "550e8400-e29b-41d4-a716-446655440000"
                    },
                    "invoice_link": {
                        "type": "string",
                        "example": "http://example.com/invoice/12345"
                    },
                    "amount": {
                        "type": "number",
                        "format": "float",
                        "example": 100
                    },
                    "payment_method": {
                        "type": "string",
                        "enum": [
                            "credit_card",
                            "paypal",
                            "bank_transfer"
                        ],
                        "example": "credit_card"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "completed",
                            "failed"
                        ],
                        "example": "completed"
                    },
                    "transaction_id": {
                        "type": "string",
                        "example": "abc123xyz"
                    },
                    "paid_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-01T12:00:00Z"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-01T12:00:00Z"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ticket"
                        }
                    }
                },
                "type": "object"
            },
            "Product": {
                "required": [
                    "id",
                    "name",
                    "price",
                    "stock_quantity"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Billet concert"
                    },
                    "product_details": {
                        "type": "object",
                        "example": {
                            "places": 1,
                            "description": "Assistez à un moment historique avec la cérémonie d’ouverture des Jeux Olympiques de Paris 2024. Vivez une soirée exceptionnelle...",
                            "date": "2024-07-26",
                            "time": "19h30 (accès recommandé dès 18h00)",
                            "location": "Stade de France, Saint-Denis",
                            "category": "Cérémonies",
                            "image": "https://picsum.photos/seed/1/600/400"
                        }
                    },
                    "price": {
                        "type": "number",
                        "format": "float",
                        "example": 59.99
                    },
                    "sale": {
                        "type": "number",
                        "format": "float",
                        "example": 49.99
                    },
                    "stock_quantity": {
                        "type": "integer",
                        "example": 100
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-01T12:00:00Z"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ticket"
                        }
                    },
                    "cart_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CartItem"
                        }
                    }
                },
                "type": "object"
            },
            "Ticket": {
                "required": [
                    "id",
                    "qr_code_link",
                    "pdf_link",
                    "is_used",
                    "is_refunded",
                    "user_id",
                    "payment_id",
                    "product_id"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "qr_code_link": {
                        "type": "string",
                        "example": "https://example.com/qr-code/12345"
                    },
                    "pdf_link": {
                        "type": "string",
                        "example": "https://example.com/ticket-pdf/12345"
                    },
                    "is_used": {
                        "type": "boolean",
                        "example": false
                    },
                    "is_refunded": {
                        "type": "boolean",
                        "example": false
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "payment_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "product_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-01T12:00:00Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "required": [
                    "id",
                    "firstname",
                    "lastname",
                    "email",
                    "role",
                    "is_active"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "firstname": {
                        "type": "string",
                        "example": "John"
                    },
                    "lastname": {
                        "type": "string",
                        "example": "Doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "employee",
                            "user"
                        ],
                        "example": "admin"
                    },
                    "twofa_enabled": {
                        "type": "boolean",
                        "example": true
                    },
                    "twofa_secret": {
                        "type": "string",
                        "example": "abcd1234"
                    },
                    "is_active": {
                        "type": "boolean",
                        "example": true
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-01T12:00:00Z"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-04-01T12:00:00Z"
                    },
                    "password_hash": {
                        "type": "string",
                        "example": "$2y$10$Sfs4e51z4./7bdZI9shXv1m5gIaDU5hN2mJ4qhp9HXVFuDQZDzKCm"
                    },
                    "remember_token": {
                        "type": "string",
                        "example": "abcd1234xyz"
                    },
                    "cart": {
                        "$ref": "#/components/schemas/Cart"
                    },
                    "tickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ticket"
                        }
                    },
                    "payments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Payment"
                        }
                    },
                    "emailUpdate": {
                        "$ref": "#/components/schemas/EmailUpdate"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter your Bearer token in the Authorization header, starting with 'Bearer 'followed by a space and your token. For example: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...`",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and registration"
        },
        {
            "name": "Users",
            "description": "User management"
        },
        {
            "name": "Products",
            "description": "Management of products available for purchase"
        }
    ]
}